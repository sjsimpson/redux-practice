stages:
  - build
  - deploy

# docker-build:
#   image: docker:latest # Official docker image
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker build --pull -t "$CI_REGISTRY_IMAGE" .
#     - docker push "$CI_REGISTRY_IMAGE"

gcp-build:
  image: google/cloud-sdk:alpine
  stage: build
  only:
    - master
  script:
    - echo $GCP_SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
    - export GCR_TAG=gcr.io/$CI_PROJECT_NAME
    - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
    - gcloud builds submit --config ".gcp-build-master.yaml" --project $PROJECT_ID

gcp-deploy:
  image: google/cloud-sdk:alpine
  stage: deploy
  only:
    - master
  script:
    - echo $GCP_SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
    - export GCR_TAG=gcr.io/$CI_PROJECT_NAME
    - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
    - gcloud --quiet --project $PROJECT_ID compute instances reset instance-1